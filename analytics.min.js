const express=require("express"),router=express.Router(),fs=require("fs"),path=require("path"),getTotalDataTransferred=()=>{const e=path.join(__dirname,"../public");let i=0;const t=e=>{fs.readdirSync(e).forEach((s=>{const r=path.join(e,s),a=fs.statSync(r);a.isDirectory()?t(r):i+=a.size}))};return t(e),(i/1048576).toFixed(2)},getImagesOptimizationPercentage=()=>{const e=path.join(__dirname,"../public/img"),i=fs.readdirSync(e),t=i.length,s=i.filter((e=>e.endsWith(".webp")||e.endsWith(".svg"))).length;return t>0?(s/t*100).toFixed(2):0},isMinified=(e,i)=>fs.readdirSync(e).some((e=>e.endsWith(i)&&e.includes(".min"))),getMinificationStatus=()=>{const e=path.join(__dirname,"../public/css"),i=path.join(__dirname,"../public/js");return{cssMinified:isMinified(e,".css"),jsMinified:isMinified(i,".js")}},getAnalyticsData=e=>{const i=getTotalDataTransferred(),t=e.locals.analytics.getAverageLoadTime(),s=e.locals.analytics.getTotalRequests(),r=getImagesOptimizationPercentage(),a=getMinificationStatus();return{totalRequests:s,totalDataTransferred:i,averageLoadTime:t,carbonEmission:(.81*i).toFixed(2),optimizations:{imagesOptimized:r,cssMinified:a.cssMinified,jsMinified:a.jsMinified}}};router.get("/",((e,i)=>{try{const t=getAnalyticsData(e.app);i.json(t)}catch(e){console.error("Erreur lors de la récupération des données analytics:",e),i.status(500).json({error:"Erreur serveur"})}})),module.exports=router;